# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Dynawo::dynawo_Interface Dynawo::dynawo_Common Dynawo::dynawo_API_PAR Dynawo::dynawo_API_TL Dynawo::dynawo_API_CRV Dynawo::dynawo_API_CRT Dynawo::dynawo_API_FS Dynawo::dynawo_API_CSTR Dynawo::dynawo_API_DYD Dynawo::dynawo_API_EXTVAR Dynawo::dynawo_API_JOB Dynawo::dynawo_SolverCommon Dynawo::dynawo_SolverKINSOL Dynawo::dynawo_SolverIDA Dynawo::dynawo_SolverSIM Dynawo::dumpSolver Dynawo::dynawo_ModelerCommon Dynawo::dynawo_DataInterface Dynawo::dynawo_ModelManager Dynawo::Modelica_externalC Dynawo::dumpModel Dynawo::generate-preassembled Dynawo::dynawo_Simulation Dynawo::dynawo_SimulationCommon Dynawo::compileModelicaModel Dynawo::dynawo_CPPModelsCommon)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target Dynawo::dynawo_Interface
add_library(Dynawo::dynawo_Interface INTERFACE IMPORTED)

set_target_properties(Dynawo::dynawo_Interface PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_OMC_1_13_2;\$<\$<BOOL:ON>:_ADEPT_>;\$<\$<CONFIG:Debug>:_DEBUG_>"
  INTERFACE_LINK_LIBRARIES "\$<\$<CXX_COMPILER_ID:GNU>:rt>;\$<\$<NOT:\$<CXX_COMPILER_ID:MSVC>>:pthread>"
)

# Create imported target Dynawo::dynawo_Common
add_library(Dynawo::dynawo_Common SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_Common PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "Dynawo::dynawo_Interface"
)

# Create imported target Dynawo::dynawo_API_PAR
add_library(Dynawo::dynawo_API_PAR SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_API_PAR PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::dynawo_API_TL
add_library(Dynawo::dynawo_API_TL SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_API_TL PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::dynawo_API_CRV
add_library(Dynawo::dynawo_API_CRV SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_API_CRV PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::dynawo_API_CRT
add_library(Dynawo::dynawo_API_CRT SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_API_CRT PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::dynawo_API_FS
add_library(Dynawo::dynawo_API_FS SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_API_FS PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::dynawo_API_CSTR
add_library(Dynawo::dynawo_API_CSTR SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_API_CSTR PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::dynawo_API_DYD
add_library(Dynawo::dynawo_API_DYD SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_API_DYD PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;\$<TARGET_PROPERTY:XMLSAXParser,INTERFACE_INCLUDE_DIRECTORIES>"
)

# Create imported target Dynawo::dynawo_API_EXTVAR
add_library(Dynawo::dynawo_API_EXTVAR SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_API_EXTVAR PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::dynawo_API_JOB
add_library(Dynawo::dynawo_API_JOB SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_API_JOB PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::dynawo_SolverCommon
add_library(Dynawo::dynawo_SolverCommon SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_SolverCommon PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;\$<TARGET_PROPERTY:Sundials::Sundials_NVECSERIAL,INTERFACE_INCLUDE_DIRECTORIES>"
  INTERFACE_LINK_LIBRARIES "dlfcn-win32::dl"
)

# Create imported target Dynawo::dynawo_SolverKINSOL
add_library(Dynawo::dynawo_SolverKINSOL SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_SolverKINSOL PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;\$<TARGET_PROPERTY:Sundials::Sundials_NVECSERIAL,INTERFACE_INCLUDE_DIRECTORIES>"
)

# Create imported target Dynawo::dynawo_SolverIDA
add_library(Dynawo::dynawo_SolverIDA SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_SolverIDA PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;\$<TARGET_PROPERTY:Sundials::Sundials_NVECSERIAL,INTERFACE_INCLUDE_DIRECTORIES>;\$<TARGET_PROPERTY:Dynawo::dynawo_SolverCommon,INTERFACE_INCLUDE_DIRECTORIES>"
)

# Create imported target Dynawo::dynawo_SolverSIM
add_library(Dynawo::dynawo_SolverSIM SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_SolverSIM PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;\$<TARGET_PROPERTY:Dynawo::dynawo_SolverCommon,INTERFACE_INCLUDE_DIRECTORIES>;\$<TARGET_PROPERTY:Sundials::Sundials_NVECSERIAL,INTERFACE_INCLUDE_DIRECTORIES>"
)

# Create imported target Dynawo::dumpSolver
add_executable(Dynawo::dumpSolver IMPORTED)
set_property(TARGET Dynawo::dumpSolver PROPERTY ENABLE_EXPORTS 1)

# Create imported target Dynawo::dynawo_ModelerCommon
add_library(Dynawo::dynawo_ModelerCommon SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_ModelerCommon PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "\$<\$<BOOL:1>:_USE_MATH_DEFINES>"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;\$<TARGET_PROPERTY:Dynawo::dynawo_API_EXTVAR,INTERFACE_INCLUDE_DIRECTORIES>;\$<TARGET_PROPERTY:Dynawo::dynawo_API_PAR,INTERFACE_INCLUDE_DIRECTORIES>;\$<TARGET_PROPERTY:Dynawo::dynawo_API_DYD,INTERFACE_INCLUDE_DIRECTORIES>"
)

# Create imported target Dynawo::dynawo_DataInterface
add_library(Dynawo::dynawo_DataInterface SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_DataInterface PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;\$<TARGET_PROPERTY:Dynawo::dynawo_API_CRT,INTERFACE_INCLUDE_DIRECTORIES>"
  INTERFACE_LINK_LIBRARIES "iidm-ext-activeseason-xml;iidm-ext-busbarsectionposition-xml;iidm-ext-connectableposition-xml;iidm-ext-currentlimitsperseason-xml;iidm-ext-generatoractivepowercontrol-xml;iidm-ext-generatorentsoecategory-xml;iidm-ext-generatorstartup-xml;iidm-ext-hvdcangledroopactivepowercontrol-xml;iidm-ext-hvdcoperatoractivepowerrange-xml;iidm-ext-loaddetail-xml;iidm-ext-standbyautomaton-xml"
)

# Create imported target Dynawo::dynawo_ModelManager
add_library(Dynawo::dynawo_ModelManager SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_ModelManager PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "Adept::Adept"
)

# Create imported target Dynawo::Modelica_externalC
add_library(Dynawo::Modelica_externalC SHARED IMPORTED)

set_target_properties(Dynawo::Modelica_externalC PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::dumpModel
add_executable(Dynawo::dumpModel IMPORTED)
set_property(TARGET Dynawo::dumpModel PROPERTY ENABLE_EXPORTS 1)

# Create imported target Dynawo::generate-preassembled
add_executable(Dynawo::generate-preassembled IMPORTED)
set_property(TARGET Dynawo::generate-preassembled PROPERTY ENABLE_EXPORTS 1)

# Create imported target Dynawo::dynawo_Simulation
add_library(Dynawo::dynawo_Simulation SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_Simulation PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::dynawo_SimulationCommon
add_library(Dynawo::dynawo_SimulationCommon SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_SimulationCommon PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target Dynawo::compileModelicaModel
add_executable(Dynawo::compileModelicaModel IMPORTED)
set_property(TARGET Dynawo::compileModelicaModel PROPERTY ENABLE_EXPORTS 1)

# Create imported target Dynawo::dynawo_CPPModelsCommon
add_library(Dynawo::dynawo_CPPModelsCommon SHARED IMPORTED)

set_target_properties(Dynawo::dynawo_CPPModelsCommon PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "\$<\$<BOOL:1>:_USE_MATH_DEFINES>"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "Dynawo::dynawo_ModelerCommon"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/dynawo-config-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
